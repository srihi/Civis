/**
 * DigitalTown SSO API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class TokenRefresh {
  
  @SerializedName("grant_type")
  private String grantType = null;
  @SerializedName("client_id")
  private String clientId = null;
  @SerializedName("client_secret")
  private String clientSecret = null;
  @SerializedName("refresh_token")
  private String refreshToken = null;
  @SerializedName("scope")
  private String scope = null;

  /**
   * Grant Type (refresh_token)
   **/
  @ApiModelProperty(required = true, value = "Grant Type (refresh_token)")
  public String getGrantType() {
    return grantType;
  }
  public void setGrantType(String grantType) {
    this.grantType = grantType;
  }

  /**
   * Client ID
   **/
  @ApiModelProperty(required = true, value = "Client ID")
  public String getClientId() {
    return clientId;
  }
  public void setClientId(String clientId) {
    this.clientId = clientId;
  }

  /**
   * Client Secret
   **/
  @ApiModelProperty(required = true, value = "Client Secret")
  public String getClientSecret() {
    return clientSecret;
  }
  public void setClientSecret(String clientSecret) {
    this.clientSecret = clientSecret;
  }

  /**
   * Refresh Token
   **/
  @ApiModelProperty(required = true, value = "Refresh Token")
  public String getRefreshToken() {
    return refreshToken;
  }
  public void setRefreshToken(String refreshToken) {
    this.refreshToken = refreshToken;
  }

  /**
   * Scope
   **/
  @ApiModelProperty(required = true, value = "Scope")
  public String getScope() {
    return scope;
  }
  public void setScope(String scope) {
    this.scope = scope;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TokenRefresh tokenRefresh = (TokenRefresh) o;
    return (this.grantType == null ? tokenRefresh.grantType == null : this.grantType.equals(tokenRefresh.grantType)) &&
        (this.clientId == null ? tokenRefresh.clientId == null : this.clientId.equals(tokenRefresh.clientId)) &&
        (this.clientSecret == null ? tokenRefresh.clientSecret == null : this.clientSecret.equals(tokenRefresh.clientSecret)) &&
        (this.refreshToken == null ? tokenRefresh.refreshToken == null : this.refreshToken.equals(tokenRefresh.refreshToken)) &&
        (this.scope == null ? tokenRefresh.scope == null : this.scope.equals(tokenRefresh.scope));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.grantType == null ? 0: this.grantType.hashCode());
    result = 31 * result + (this.clientId == null ? 0: this.clientId.hashCode());
    result = 31 * result + (this.clientSecret == null ? 0: this.clientSecret.hashCode());
    result = 31 * result + (this.refreshToken == null ? 0: this.refreshToken.hashCode());
    result = 31 * result + (this.scope == null ? 0: this.scope.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class TokenRefresh {\n");
    
    sb.append("  grantType: ").append(grantType).append("\n");
    sb.append("  clientId: ").append(clientId).append("\n");
    sb.append("  clientSecret: ").append(clientSecret).append("\n");
    sb.append("  refreshToken: ").append(refreshToken).append("\n");
    sb.append("  scope: ").append(scope).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
