/**
 * DigitalTown SSO API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class Token1 {
  
  @SerializedName("grant_type")
  private String grantType = null;
  @SerializedName("client_id")
  private String clientId = null;
  @SerializedName("client_secret")
  private String clientSecret = null;
  @SerializedName("redirect_uri")
  private String redirectUri = null;
  @SerializedName("code")
  private String code = null;

  /**
   * Grant Type (authorization_code)
   **/
  @ApiModelProperty(required = true, value = "Grant Type (authorization_code)")
  public String getGrantType() {
    return grantType;
  }
  public void setGrantType(String grantType) {
    this.grantType = grantType;
  }

  /**
   * Client ID
   **/
  @ApiModelProperty(required = true, value = "Client ID")
  public String getClientId() {
    return clientId;
  }
  public void setClientId(String clientId) {
    this.clientId = clientId;
  }

  /**
   * Client Secret
   **/
  @ApiModelProperty(required = true, value = "Client Secret")
  public String getClientSecret() {
    return clientSecret;
  }
  public void setClientSecret(String clientSecret) {
    this.clientSecret = clientSecret;
  }

  /**
   * Redirect Callback
   **/
  @ApiModelProperty(required = true, value = "Redirect Callback")
  public String getRedirectUri() {
    return redirectUri;
  }
  public void setRedirectUri(String redirectUri) {
    this.redirectUri = redirectUri;
  }

  /**
   * Access Code from authorization
   **/
  @ApiModelProperty(required = true, value = "Access Code from authorization")
  public String getCode() {
    return code;
  }
  public void setCode(String code) {
    this.code = code;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Token1 token1 = (Token1) o;
    return (this.grantType == null ? token1.grantType == null : this.grantType.equals(token1.grantType)) &&
        (this.clientId == null ? token1.clientId == null : this.clientId.equals(token1.clientId)) &&
        (this.clientSecret == null ? token1.clientSecret == null : this.clientSecret.equals(token1.clientSecret)) &&
        (this.redirectUri == null ? token1.redirectUri == null : this.redirectUri.equals(token1.redirectUri)) &&
        (this.code == null ? token1.code == null : this.code.equals(token1.code));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.grantType == null ? 0: this.grantType.hashCode());
    result = 31 * result + (this.clientId == null ? 0: this.clientId.hashCode());
    result = 31 * result + (this.clientSecret == null ? 0: this.clientSecret.hashCode());
    result = 31 * result + (this.redirectUri == null ? 0: this.redirectUri.hashCode());
    result = 31 * result + (this.code == null ? 0: this.code.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Token1 {\n");
    
    sb.append("  grantType: ").append(grantType).append("\n");
    sb.append("  clientId: ").append(clientId).append("\n");
    sb.append("  clientSecret: ").append(clientSecret).append("\n");
    sb.append("  redirectUri: ").append(redirectUri).append("\n");
    sb.append("  code: ").append(code).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
